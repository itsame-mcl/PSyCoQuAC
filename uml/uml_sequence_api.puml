@startuml "uml_sequence_api"
participant ImportationService as Importation
participant BANClient as Client
participant FicheAdresse as FA
participant StringIO as StringIO
participant BytesIO as BytesIO
entity "API BAN" as BAN
participant DAOFicheAdresse as DAO
database PostgreSQL as SQL

activate Importation
Importation -> Client : geocodage_par_lot(List[FicheAdresse])
activate Client
Client -> StringIO : __init__()
activate StringIO
loop pour chaque fiche à traiter
    Client -> FA : str(adresse_finale.getattr)
    activate FA
    Client <-- FA : addr = "numero voie cp ville"
    deactivate FA
    Client -> StringIO : writerow(addr)
end
StringIO -> BytesIO : write(encode='utf-8')
activate BytesIO
deactivate StringIO
BytesIO -> BAN : GET /search/csv
activate BAN
BytesIO <-- BAN : response.content
deactivate BAN
activate StringIO
StringIO <-- BytesIO : write(decode='utf-8')
deactivate BytesIO
Client <-- StringIO : DictReader(answer)
deactivate StringIO
loop pour chaque ligne de la réponse
    activate FA
    Client -> FA : adresse_finale(réponse API)
    Client -> FA : coords_WGS84(réponse API)
    alt score >= seuil
        Client -> FA : code_res("TH")
    else score < seuil
        Client -> FA : code_res("TR")
    end
    Client <-- FA : FicheAdresse modifiée
    deactivate FA
end
deactivate StringIO
Importation <- Client : List[FicheAdresse]
deactivate Client
loop pour chaque objet FicheAdresse
Importation -> DAO : mise_a_jour_fa(FicheAdresse)
    activate DAO
    DAO -> SQL : UPDATE FA
    activate SQL
    DAO <-- SQL : OK
    deactivate SQL
    Importation <-- DAO : bool True
    deactivate DAO
end
deactivate Importation
@enduml